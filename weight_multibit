<class 'models.resnet.ResNet'>
conv1 <class 'quant.quant_module.QuantizedLayer'>
conv1.module <class 'quant.quant_module.QConv2d'>
conv1.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
conv1.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
conv1.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
conv1.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
conv1.activation <class 'torch.nn.modules.activation.ReLU'>
bn1 <class 'utils.fold_bn.StraightThrough'>
relu <class 'utils.fold_bn.StraightThrough'>
maxpool <class 'torch.nn.modules.pooling.MaxPool2d'>
layer1 <class 'torch.nn.modules.container.Sequential'>
layer1.0 <class 'utils.model_utils.QuantBasicBlock'>
layer1.0.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer1.0.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer1.0.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.0.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer1.0.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer1.0.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer1.0.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.0.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer1.0.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer1.0.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.0.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer1.0.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer1.0.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.0.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer1.0.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer1.0.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.0.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer1.0.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer1.0.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.0.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.0.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.0.activation <class 'torch.nn.modules.activation.ReLU'>
layer1.0.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer1.0.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer1.0.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.0.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
layer1.1 <class 'utils.model_utils.QuantBasicBlock'>
layer1.1.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer1.1.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer1.1.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.1.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer1.1.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer1.1.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer1.1.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.1.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer1.1.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer1.1.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.1.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer1.1.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer1.1.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.1.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer1.1.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer1.1.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.1.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer1.1.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer1.1.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer1.1.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer1.1.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer1.1.activation <class 'torch.nn.modules.activation.ReLU'>
layer1.1.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer1.1.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer1.1.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer1.1.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
layer2 <class 'torch.nn.modules.container.Sequential'>
layer2.0 <class 'utils.model_utils.QuantBasicBlock'>
layer2.0.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer2.0.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer2.0.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.0.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer2.0.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer2.0.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer2.0.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.0.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer2.0.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer2.0.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.0.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer2.0.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer2.0.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.0.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer2.0.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer2.0.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.0.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer2.0.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer2.0.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.0.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.0.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.0.downsample <class 'quant.quant_module.QuantizedLayer'>
layer2.0.downsample.module <class 'quant.quant_module.QConv2d'>
layer2.0.downsample.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.0.downsample.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.0.activation <class 'torch.nn.modules.activation.ReLU'>
layer2.0.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer2.0.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer2.0.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.0.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
layer2.1 <class 'utils.model_utils.QuantBasicBlock'>
layer2.1.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer2.1.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer2.1.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.1.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer2.1.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer2.1.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer2.1.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.1.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer2.1.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer2.1.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.1.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer2.1.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer2.1.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.1.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer2.1.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer2.1.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.1.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer2.1.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer2.1.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer2.1.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer2.1.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer2.1.activation <class 'torch.nn.modules.activation.ReLU'>
layer2.1.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer2.1.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer2.1.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer2.1.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
layer3 <class 'torch.nn.modules.container.Sequential'>
layer3.0 <class 'utils.model_utils.QuantBasicBlock'>
layer3.0.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer3.0.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer3.0.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.0.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer3.0.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer3.0.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer3.0.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.0.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer3.0.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer3.0.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.0.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer3.0.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer3.0.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.0.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer3.0.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer3.0.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.0.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer3.0.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer3.0.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.0.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.0.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.0.downsample <class 'quant.quant_module.QuantizedLayer'>
layer3.0.downsample.module <class 'quant.quant_module.QConv2d'>
layer3.0.downsample.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.0.downsample.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.0.activation <class 'torch.nn.modules.activation.ReLU'>
layer3.0.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer3.0.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer3.0.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.0.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
layer3.1 <class 'utils.model_utils.QuantBasicBlock'>
layer3.1.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer3.1.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer3.1.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.1.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer3.1.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer3.1.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer3.1.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.1.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer3.1.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer3.1.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.1.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer3.1.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer3.1.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.1.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer3.1.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer3.1.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.1.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer3.1.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer3.1.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer3.1.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer3.1.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer3.1.activation <class 'torch.nn.modules.activation.ReLU'>
layer3.1.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer3.1.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer3.1.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer3.1.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
layer4 <class 'torch.nn.modules.container.Sequential'>
layer4.0 <class 'utils.model_utils.QuantBasicBlock'>
layer4.0.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer4.0.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer4.0.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.0.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer4.0.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer4.0.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer4.0.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.0.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer4.0.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer4.0.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.0.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer4.0.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer4.0.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.0.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer4.0.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer4.0.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.0.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer4.0.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer4.0.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.0.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.0.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.0.downsample <class 'quant.quant_module.QuantizedLayer'>
layer4.0.downsample.module <class 'quant.quant_module.QConv2d'>
layer4.0.downsample.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.0.downsample.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.0.activation <class 'torch.nn.modules.activation.ReLU'>
layer4.0.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer4.0.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer4.0.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.0.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
layer4.1 <class 'utils.model_utils.QuantBasicBlock'>
layer4.1.conv1_relu_low <class 'quant.quant_module.QuantizedLayer'>
layer4.1.conv1_relu_low.module <class 'quant.quant_module.QConv2d'>
layer4.1.conv1_relu_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.1.conv1_relu_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv1_relu_low.activation <class 'torch.nn.modules.activation.ReLU'>
layer4.1.conv1_relu_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.conv1_relu_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv1_relu_mid <class 'quant.quant_module.QuantizedLayer'>
layer4.1.conv1_relu_mid.module <class 'quant.quant_module.QConv2d'>
layer4.1.conv1_relu_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.1.conv1_relu_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv1_relu_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.conv1_relu_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv1_relu_high <class 'quant.quant_module.QuantizedLayer'>
layer4.1.conv1_relu_high.module <class 'quant.quant_module.QConv2d'>
layer4.1.conv1_relu_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.1.conv1_relu_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv1_relu_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.conv1_relu_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv2_low <class 'quant.quant_module.QuantizedLayer'>
layer4.1.conv2_low.module <class 'quant.quant_module.QConv2d'>
layer4.1.conv2_low.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.1.conv2_low.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv2_low.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.conv2_low.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv2_mid <class 'quant.quant_module.QuantizedLayer'>
layer4.1.conv2_mid.module <class 'quant.quant_module.QConv2d'>
layer4.1.conv2_mid.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.1.conv2_mid.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv2_mid.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.conv2_mid.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv2_high <class 'quant.quant_module.QuantizedLayer'>
layer4.1.conv2_high.module <class 'quant.quant_module.QConv2d'>
layer4.1.conv2_high.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
layer4.1.conv2_high.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
layer4.1.conv2_high.layer_post_act_fake_quantize <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.conv2_high.layer_post_act_fake_quantize.observer <class 'quant.observer.MSEObserver'>
layer4.1.activation <class 'torch.nn.modules.activation.ReLU'>
layer4.1.block_post_act_fake_quantize_low <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.block_post_act_fake_quantize_low.observer <class 'quant.observer.MSEObserver'>
layer4.1.block_post_act_fake_quantize_med <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.block_post_act_fake_quantize_med.observer <class 'quant.observer.MSEObserver'>
layer4.1.block_post_act_fake_quantize_high <class 'quant.fake_quant.LSQFakeQuantize'>
layer4.1.block_post_act_fake_quantize_high.observer <class 'quant.observer.MSEObserver'>
avgpool <class 'torch.nn.modules.pooling.AdaptiveAvgPool2d'>
fc <class 'quant.quant_module.QuantizedLayer'>
fc.module <class 'quant.quant_module.QLinear'>
fc.module.weight_fake_quant <class 'quant.fake_quant.AdaRoundFakeQuantize'>
fc.module.weight_fake_quant.observer <class 'quant.observer.MSEObserver'>
[AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
), AdaRoundFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=0, quant_min=0, quant_max=15
  (observer): MSEObserver()
)]
[LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=3, ch_axis=-1, quant_min=0, quant_max=7
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=4, ch_axis=-1, quant_min=0, quant_max=15
  (observer): MSEObserver()
), LSQFakeQuantize(
  fake_quant_enabled=0, observer_enabled=0, symmetric=False, bit=5, ch_axis=-1, quant_min=0, quant_max=31
  (observer): MSEObserver()
)]